# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#   nbMerge - git enabled for Mathematica (R)
#   Stefan Amberger, snambergit@gmail.com
#
#   Copyright (2013) Stefan Amberger. This software is distributed under
#   the GNU General Public License.
#
#   This file is part of nbMerge.
#
#   nbMerge is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   nbMerge is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with nbMerge.  If not, see <http://www.gnu.org/licenses/>.
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

INSTALLATION

- place a copy of nbMerge somewhere
- to install notebook-normalization for a project, run
  ./install.sh [path-to-repo] [path-to-nbMerge]

DESCRIPTION

After the installation of nbMerge all commits executed via the command line will
trigger a 'git pre-commit hook' that rewrites all modified or created
Mathematica (R) notebook files, such that they are in a kind of normal form.

For these files the line-based style of git is functional, and merge-conflicts
will arise when different changes within one formula (Cell) are conflicting.

Merge conflicts that are arising due to different changes within the same cell
can be easily solved using a provided merge-tool (name: nbMerge).

IMPORTANT

nbMerge needs to be installed for each repository for which it is supposed normalize
Mathematica (R) notebook files!
Merging works, once nbMerge has been installed at least once.

USAGE

1. notebook normalization
-------------------------

this is done automatically before each commit, once nbMerge is installed
for a repository

2. git merge conflict resolution
--------------------------------

- cd in the root folder of the project-directory
- check whether the merge conflict is resolvable using classical merge tools
  (i.e. the conflict arose due to notebook-properties and not changes inside
  a Cell), and if possible, resolve any property-conflicts using classical tools
  (nbMerge is not good at conflicts that arise outside cells)
- if this is not the case, or these kinds of conflicts were resolved, run the command
    git mergetool --tool=nbMerge
  or
    git mergetool --tool=nbMerge <file>
- choose the branch of your choice (by push of a button) for each conflict
  that appears in the notebook file.

AUTHORS

Stefan Amberger (JKU Linz)
	snambergit@gmail.com

Wolfgang Windsteiger (RISC, JKU Linz)
	wolfgang.windsteiger@risc.jku.at

UPDATES

will be available via the Theorema project or via https://github.com/sn-amber/nbMerge.

